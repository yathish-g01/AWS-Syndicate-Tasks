{
  "openapi": "3.0.1",
  "info": {
    "title": "task11_api",
    "version": "2024-08-13T09:38:24Z"
  },
  "servers": [
    {
      "url": "https://kc1v5ylvrd.execute-api.eu-central-1.amazonaws.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api"
        }
      }
    }
  ],
  "paths": {
    "/tables/{tableId}": {
      "get": {
        "summary": "Finds tables by id",
        "description": "Finds tables by id",
        "parameters": [
          {
            "name": "tableId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id",
                    "number",
                    "places",
                    "isVip"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "number": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1
                    },
                    "places": {
                      "type": "integer",
                      "format": "int64",
                      "example": 5
                    },
                    "isVip": {
                      "type": "boolean",
                      "example": true
                    },
                    "minOrder": {
                      "type": "integer",
                      "format": "int64",
                      "example": 1000
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, user/password invalid"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n$input.path('$.body')\n#if($inputRoot.toString().contains(\"ERROR\"))\n    #set($context.responseOverride.status = 400)\n#end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('tableId')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "options": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/reservations": {
      "get": {
        "summary": "Fetches all the reservations",
        "description": "Fetches all the reservations",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tableNumber": {
                        "type": "integer",
                        "format": "int64",
                        "example": 11
                      },
                      "clientName": {
                        "type": "string",
                        "example": "Jesus R"
                      },
                      "phoneNumber": {
                        "type": "string",
                        "example": 315444
                      },
                      "date": {
                        "type": "string",
                        "example": "2024-07-26"
                      },
                      "slotTimeStart": {
                        "type": "string",
                        "example": "13:00"
                      },
                      "slotTimeEnd": {
                        "type": "string",
                        "example": "15:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, user/password invalid"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))$input.path('$.body')#if($inputRoot.toString().contains(\"ERROR\"))\n    #set($context.responseOverride.status = 400)\n#end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "post": {
        "summary": "Creates a new reservation",
        "description": "Create a new reservation in the system",
        "requestBody": {
          "description": "Reservation details",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "tableNumber",
                  "clientName",
                  "phoneNumber",
                  "date",
                  "slotTimeStart",
                  "slotTimeEnd"
                ],
                "type": "object",
                "properties": {
                  "tableNumber": {
                    "type": "integer",
                    "format": "int64",
                    "example": 11
                  },
                  "clientName": {
                    "type": "string",
                    "example": "Jesus R"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": 315444
                  },
                  "date": {
                    "type": "string",
                    "example": "2024-07-26"
                  },
                  "slotTimeStart": {
                    "type": "string",
                    "example": "13:00"
                  },
                  "slotTimeEnd": {
                    "type": "string",
                    "example": "15:00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "reservationId"
                  ],
                  "type": "object",
                  "properties": {
                    "reservationId": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, invalid token"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$')){\"reservationId\": \"$input.path('$.body')\"#if($inputRoot.toString().contains('ERROR'))\n    #set($context.responseOverride.status = 400)\n#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "Fetches all the tables",
        "description": "Fetches all the tables",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      },
                      "number": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                      },
                      "places": {
                        "type": "integer",
                        "format": "int64",
                        "example": 5
                      },
                      "isVip": {
                        "type": "boolean",
                        "example": true
                      },
                      "minOrder": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1000
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, user/password invalid"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))$input.path('$.body')#if($inputRoot.toString().contains(\"ERROR\"))\n    #set($context.responseOverride.status = 400)\n#end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "post": {
        "summary": "Creates a new table",
        "description": "Create a new table in the system",
        "requestBody": {
          "description": "Table details",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "id",
                  "number",
                  "places",
                  "isVip"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  },
                  "number": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1
                  },
                  "places": {
                    "type": "integer",
                    "format": "int64",
                    "example": 5
                  },
                  "isVip": {
                    "type": "boolean",
                    "example": true
                  },
                  "minOrder": {
                    "type": "integer",
                    "format": "int64",
                    "example": 1000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, invalid token"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\"id\": $input.path('$.body')#if($inputRoot.toString().contains('ERROR'))\n    #set($context.responseOverride.status = 400)\n#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Logs in a new user",
        "description": "Logs in a user",
        "requestBody": {
          "description": "User info",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "jesus@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Jesus123/+*"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "accessToken"
                  ],
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "\"eyJraWQiOiJwSVAxaXFMamtWQkN1MjgxMW0wc1F0RVB1RGJ2RVM4aTg5NHhURURFSURvPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiI2Mzg0NDg3Mi0yMDQxLTcwODMtNzU1OS0wYzBhMzFjZTEwNjkiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb21cL2V1LWNlbnRyYWwtMV9Od25hNE52SUYiLCJjb2duaXRvOnVzZXJuYW1lIjoiNjM4NDQ4NzItMjA0MS03MDgzLTc1NTktMGMwYTMxY2UxMDY5Iiwib3JpZ2luX2p0aSI6ImM3NDcxNmY3LWM2NzAtNDA3Mi1iNGFjLTg1YzA4YzJmNDU1NiIsImF1ZCI6IjV0N24yaGxnNDIya2kybHJpa2xjZXFpamM1IiwiZXZlbnRfaWQiOiI0MDM1ZjQ1Ny01MTU3LTQyMTMtOWRmNC0xOTJhMDdmNjA4ZDQiLCJ0b2tlbl91c2UiOiJpZCIsImF1dGhfdGltZSI6MTcyMjI3Njg0MCwiZXhwIjoxNzIyMjgwN"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, user/password invalid"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n{\"accessToken\": \"$input.path('$.body')\"\n#if($inputRoot.toString().contains('ERROR'))\n    #set($context.responseOverride.status = 400)\n#end}"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Creates a new user",
        "description": "Create a new user in Cognito",
        "requestBody": {
          "description": "User details",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "password"
                ],
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "example": "Jesus"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Rodriguez"
                  },
                  "email": {
                    "type": "string",
                    "example": "jesus@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Jesus123/+*"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request, password does not meet requirements"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:196241772369:function:api_handler/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "responseTemplates": {
                "application/json": "#set($inputRoot = $input.path('$'))\n$input.path('$.body')\n#if($inputRoot.toString().contains(\"ERROR\"))\n    #set($context.responseOverride.status = 400)\n#end"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"method\": \"$context.httpMethod\", \"path\": \"$context.resourcePath\", \"authorization_header\": \"$input.params('Authorization')\", \"body_json\": $input.json('$')}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "aws"
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Empty": {
        "title": "Empty Schema",
        "type": "object"
      }
    },
    "securitySchemes": {
      "authorizer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
          "x-syndicate-cognito-userpool-names": [
            "simple-booking-userpool"
          ],
          "type": "cognito_user_pools"
        }
      }
    }
  }
}